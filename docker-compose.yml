services:
  minio_server:
    container_name: minio_server
    hostname: minio
    image: minio/minio@sha256:d051d800a3025588f37f69f132bb5ef718547a9a4ee95ddee44e04ad952a0a96
    entrypoint: sh
    command: -c 'mkdir -p /data/mlflow && minio server /data --console-address ":9001"'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9000/minio/health/live || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - backend

  app_server:
    container_name: app_server
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        - AWS_REGION=${AWS_REGION}
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - DVC_REMOTE_URL=${DVC_REMOTE_URL}
      - MLFLOW_TRACKING_URI=http://ec2-54-173-194-157.compute-1.amazonaws.com:5000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    networks:
      - backend
    restart: unless-stopped
    command: uvicorn server.api:app --host 0.0.0.0 --port 8000 --reload

volumes:
  app_data:

networks:
  backend:
    driver: bridge